var tipuesearch = {"pages": [{'title': 'About', 'text': '課程名稱:\xa0 電腦輔助設計與實習 \n 組員: 蔡逸誠、吳定穎、黃啟一 \n Repo:  https://github.com/41323147/cad2025 \n 群組網站:  https://41323147.github.io/cad2025/content/index.html \n 課程評分: \n 學習心得報告 (60%) \xa0 - MS Teams 線上參與，6人一組每三週發表學習心得。 \n w3、w7、w10、w14、w17、w18 \n 學習心得報告主題 : \n w3: 用什麼套件完成 \xa0 5-bar Linkage Plotter \xa0 與 \xa0 Openduck mini \xa0 零組件設計繪圖？ \xa0 Solvespace , \xa0 Siemens NX , \xa0 Onshape \xa0 或其他？各有什麼優缺點？ ( plotter.7z , \xa0 open_duck_mini.7z ) \n w7 ( 2a 採 Youtube 影片簡報 ): \xa0 5-bar Linkage Plotter \xa0 與 \xa0 Openduck mini \xa0零組件設計繪製完成之後，如何切割零件? 為何要切割零件？ 如何利用 \xa0 Webots \xa0 進行後續的控制系統設計與動態模擬 (Dynamic Simulation)？( plotter_project.7z ) \n w10: \xa0 Webots \xa0 是什麼？有什麼特點？ 如何進行場景模擬？ 如何用 Python 進行控制系統設計？ ( Tutorial ) \n w14: \xa0 Webots \xa0 的模型有沒有辦法用程式方法建立? 有沒有辦法直接從 CAD 套件中轉出 \xa0 Webots \xa0 的場景模型？ \n w17: 如何實作一套 \xa0 5-bar Linkage Plotter \xa0 與 \xa0 Openduck mini ？( Disney Bipedal Robot ) \n w18: 課程總結 \n 個人與分組網站維護 (40%) \xa0 - 每週至少兩次推送與課程進度相關的學習內容與心得。 \n w9 期中自評、w18 期末自評 \n', 'tags': '', 'url': 'About.html'}, {'title': 'w3', 'text': '用什麼套件完成 \xa0 5-bar Linkage Plotter \xa0 與 \xa0 Openduck mini \xa0 零組件設計繪圖？ \xa0 Solvespace , \xa0 Siemens NX , \xa0 Onshape \xa0 或其他？各有什麼優缺點？ ( plotter.7z , \xa0 open_duck_mini.7z ) \n \n 軟體套件分析 : \n Solvespace\xa0 \xa0 優點:適合快速建模且機構連桿模擬簡單適合基本連桿運動學分析。 \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 缺點:功能基礎且缺乏協作功能不適合多人專案和大型專案不友善。 \n Siemens NX\xa0 \xa0優點:CAD、CAE、CAM整合功能完整，適合精密設計和高級組建管理。 \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 缺點:對於單純 5-bar linkage繪圖不是很合適，且不如雲端方便。 \n Onshape\xa0 \xa0 \xa0 \xa0 優點:支援多人協作和約束參數建模靈活方便測試不同設計，也可直接機構模擬和檢視路徑。 \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 缺點:高級CAE與渲染功能弱需搭配其他工具，而且隱私受限。 \n 最後我們會選擇Onshape套件繪製5-bar Linkage Plotter的原因和考量 : \n \xa0 1. 方便性: 不需要安裝和方便雲端操作，可隨時修改操作。 \n \xa0 2. 協作性: 支援多人協作討論，版本清晰對於討論或展示非常實用。 \n \xa0 3. 效率: 5-bar linkage 主要是機構模擬，Onshape 的約束與動畫功能剛好能滿足需求。 \n 我們使用Onshape繪製出plotclock(繪圖儀) 立體視圖: 側視圖: \n \n', 'tags': '', 'url': 'w3.html'}, {'title': 'w7', 'text': '', 'tags': '', 'url': 'w7.html'}, {'title': 'w10', 'text': '', 'tags': '', 'url': 'w10.html'}, {'title': 'w14', 'text': '', 'tags': '', 'url': 'w14.html'}, {'title': 'w17', 'text': '', 'tags': '', 'url': 'w17.html'}, {'title': 'w18', 'text': '', 'tags': '', 'url': 'w18.html'}, {'title': 'Brython', 'text': 'Brython  是一個將  Python  語法編譯為  JavaScript  的工具，能直接在瀏覽器中以  Python  撰寫前端網頁程式。 \n 1 add to 100 機器人巡邏 自由行 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  累加程式開始  \n \n  累加程式結束     機器人巡邏程式開始  \n \n  機器人巡邏程式結束  \n  機器人自由行程式開始  \n \n \n \n  機器人自由行程式結束  \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n', 'tags': '', 'url': 'Brython.html'}, {'title': 'Pyodide3', 'text': 'Pyodide3 則在  Pyodide  與  Pyodide2  頁面架構下，進一步導入  robot_w_world.py ，在既有的水平圍牆  north.png  與垂直圍牆  east.png  檔案之外，加入  carrot.png 、 grass.png  與  pale_grass.png  等圖檔。並且擴充可從 URL 讀進 json 格式的 world 變數功能，以便製作出更多元的場景任務，要求機器人執行。 \n 其中 src URL 變數，可以將網路上的機器人控制程式導入 Pyodide3 頁面外，world URL 變數則可以導入源自  Reeborg  機器人程式所設定的 json 格式場景。 \n 由於 Reeborg 系統中的 png 圖檔均非透明背景， robot_w_world.py \xa0必須利用 HTML 中的 CANVAS，將關鍵的白色背景，以透明的方式顯示。 \n src URL 變數讀進  turn_right 程式 ，而 world URL 變數則讀進  harvest2.json ，執行 結果 。 \n 讀進  harvest3.json , 執行 結果 。 \n \n \n \n version   hello   1 add to 100   機器人巡邏   自由行   numpy_ode \n  Ace Editor Scripts  \n \n \n \n \n \n \n \n \n  Editor 1  \n \n Run   Output   清除輸出區   Reload \n \n \n \n \n \n 從 1 累加到 100 part2: \n 1 add to 100 \n  Editor 2  \n \n Run   Output   清除輸出區   Reload \n \n \n \n \n \n \n', 'tags': '', 'url': 'Pyodide3.html'}]};